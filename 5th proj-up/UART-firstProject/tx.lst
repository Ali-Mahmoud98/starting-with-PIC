;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 1/29/2021 7:47:33 AM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EFB8  	GOTO        368
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_Mul_32x32_U:
;__Lib_Math.c,1616 :: 		
;__Lib_Math.c,1631 :: 		
0x001C	0x0E22      	MOVLW       34
;__Lib_Math.c,1632 :: 		
0x001E	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,1633 :: 		
0x0020	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,1634 :: 		
0x0022	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,1635 :: 		
0x0024	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,1636 :: 		
0x0026	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,1638 :: 		
_NEXT:
;__Lib_Math.c,1642 :: 		
0x0028	0x060C      	DECF        R12, 1, 0
;__Lib_Math.c,1643 :: 		
0x002A	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1644 :: 		
0x002C	0xD01F      	BRA         _EXIT2
;__Lib_Math.c,1645 :: 		
0x002E	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,1647 :: 		
_LOOP:
;__Lib_Math.c,1656 :: 		
0x0030	0x320B      	RRCF        R11, 1, 0
;__Lib_Math.c,1657 :: 		
0x0032	0x320A      	RRCF        R10, 1, 0
;__Lib_Math.c,1658 :: 		
0x0034	0x3209      	RRCF        R9, 1, 0
;__Lib_Math.c,1659 :: 		
0x0036	0x3208      	RRCF        R8, 1, 0
;__Lib_Math.c,1660 :: 		
0x0038	0x3203      	RRCF        R3, 1, 0
;__Lib_Math.c,1661 :: 		
0x003A	0x3202      	RRCF        R2, 1, 0
;__Lib_Math.c,1662 :: 		
0x003C	0x3201      	RRCF        R1, 1, 0
;__Lib_Math.c,1663 :: 		
0x003E	0x3200      	RRCF        R0, 1, 0
;__Lib_Math.c,1668 :: 		
0x0040	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1669 :: 		
0x0042	0xD7F2      	BRA         _NEXT
;__Lib_Math.c,1670 :: 		
0x0044	0x060C      	DECF        R12, 1, 0
;__Lib_Math.c,1671 :: 		
0x0046	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1672 :: 		
0x0048	0xD009      	BRA         _EXIT1
;__Lib_Math.c,1679 :: 		
0x004A	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1680 :: 		
0x004C	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1681 :: 		
0x004E	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1684 :: 		
0x0050	0x2209      	ADDWFC      R9, 1, 0
;__Lib_Math.c,1685 :: 		
0x0052	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1688 :: 		
0x0054	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,1689 :: 		
0x0056	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1692 :: 		
0x0058	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,1694 :: 		
0x005A	0xD7EA      	BRA         _LOOP
;__Lib_Math.c,1696 :: 		
_EXIT1:
;__Lib_Math.c,1701 :: 		
0x005C	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1702 :: 		
0x005E	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1703 :: 		
0x0060	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1706 :: 		
0x0062	0x2209      	ADDWFC      R9, 1, 0
;__Lib_Math.c,1707 :: 		
0x0064	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1710 :: 		
0x0066	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,1711 :: 		
0x0068	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1714 :: 		
0x006A	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,1717 :: 		
_EXIT2:
;__Lib_Math.c,1719 :: 		
L_end_Mul_32x32_U:
0x006C	0x0012      	RETURN      0
; end of _Mul_32x32_U
_srand:
;__Lib_CStdlib.c,301 :: 		
;__Lib_CStdlib.c,302 :: 		
0x006E	0xF019C030  	MOVFF       FARG_srand_x, __Lib_CStdlib_randx
0x0072	0xF01AC031  	MOVFF       FARG_srand_x+1, __Lib_CStdlib_randx+1
0x0076	0x0E00      	MOVLW       0
0x0078	0x6E1B      	MOVWF       __Lib_CStdlib_randx+2 
0x007A	0x6E1C      	MOVWF       __Lib_CStdlib_randx+3 
;__Lib_CStdlib.c,303 :: 		
0x007C	0x0E01      	MOVLW       1
0x007E	0x6E1D      	MOVWF       __Lib_CStdlib_randf 
;__Lib_CStdlib.c,304 :: 		
L_end_srand:
0x0080	0x0012      	RETURN      0
; end of _srand
_UART1_Write:
;__Lib_UART_c67.c,58 :: 		
;__Lib_UART_c67.c,59 :: 		
L_UART1_Write3:
0x0082	0xB2AC      	BTFSC       TXSTA, 1 
0x0084	0xD002      	BRA         L_UART1_Write4
;__Lib_UART_c67.c,60 :: 		
0x0086	0x0000      	NOP
0x0088	0xD7FC      	BRA         L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,61 :: 		
0x008A	0xFFADC02F  	MOVFF       FARG_UART1_Write_data_, TXREG
;__Lib_UART_c67.c,62 :: 		
L_end_UART1_Write:
0x008E	0x0012      	RETURN      0
; end of _UART1_Write
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0090	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0092	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0096	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0098	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x009A	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x009C	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x009E	0x0012      	RETURN      0
; end of ___CC2DW
_UART1_Init:
;__Lib_UART_c67.c,15 :: 		
;__Lib_UART_c67.c,18 :: 		
0x00A0	0x0E82      	MOVLW       _UART1_Write
0x00A2	0x6E15      	MOVWF       _UART_Wr_Ptr 
0x00A4	0x0E00      	MOVLW       hi_addr(_UART1_Write)
0x00A6	0x6E16      	MOVWF       _UART_Wr_Ptr+1 
0x00A8	0x0E2F      	MOVLW       FARG_UART1_Write_data_
0x00AA	0x6E17      	MOVWF       _UART_Wr_Ptr+2 
0x00AC	0x0E00      	MOVLW       hi_addr(FARG_UART1_Write_data_)
0x00AE	0x6E18      	MOVWF       _UART_Wr_Ptr+3 
;__Lib_UART_c67.c,19 :: 		
0x00B0	0x0EFF      	MOVLW       _UART1_Read
0x00B2	0x6E26      	MOVWF       _UART_Rd_Ptr 
0x00B4	0x0EFF      	MOVLW       hi_addr(_UART1_Read)
0x00B6	0x6E27      	MOVWF       _UART_Rd_Ptr+1 
0x00B8	0x0E00      	MOVLW       0
0x00BA	0x6E28      	MOVWF       _UART_Rd_Ptr+2 
0x00BC	0x0E00      	MOVLW       0
0x00BE	0x6E29      	MOVWF       _UART_Rd_Ptr+3 
;__Lib_UART_c67.c,20 :: 		
0x00C0	0x0EFF      	MOVLW       _UART1_Data_Ready
0x00C2	0x6E22      	MOVWF       _UART_Rdy_Ptr 
0x00C4	0x0EFF      	MOVLW       hi_addr(_UART1_Data_Ready)
0x00C6	0x6E23      	MOVWF       _UART_Rdy_Ptr+1 
0x00C8	0x0E00      	MOVLW       0
0x00CA	0x6E24      	MOVWF       _UART_Rdy_Ptr+2 
0x00CC	0x0E00      	MOVLW       0
0x00CE	0x6E25      	MOVWF       _UART_Rdy_Ptr+3 
;__Lib_UART_c67.c,21 :: 		
0x00D0	0x0EFF      	MOVLW       _UART1_Tx_Idle
0x00D2	0x6E1E      	MOVWF       _UART_Tx_Idle_Ptr 
0x00D4	0x0EFF      	MOVLW       hi_addr(_UART1_Tx_Idle)
0x00D6	0x6E1F      	MOVWF       _UART_Tx_Idle_Ptr+1 
0x00D8	0x0E00      	MOVLW       0
0x00DA	0x6E20      	MOVWF       _UART_Tx_Idle_Ptr+2 
0x00DC	0x0E00      	MOVLW       0
0x00DE	0x6E21      	MOVWF       _UART_Tx_Idle_Ptr+3 
;__Lib_UART_c67.c,23 :: 		
0x00E0	0x8AAC      	BSF         TXSTA, 5 
;__Lib_UART_c67.c,24 :: 		
0x00E2	0x0E90      	MOVLW       144
0x00E4	0x6EAB      	MOVWF       RCSTA 
;__Lib_UART_c67.c,25 :: 		
0x00E6	0x8E94      	BSF         TRISC7_bit, BitPos(TRISC7_bit+0) 
;__Lib_UART_c67.c,26 :: 		
0x00E8	0x9C94      	BCF         TRISC6_bit, BitPos(TRISC6_bit+0) 
;__Lib_UART_c67.c,28 :: 		
L_UART1_Init0:
0x00EA	0xAA9E      	BTFSS       PIR1, 5 
0x00EC	0xD003      	BRA         L_UART1_Init1
;__Lib_UART_c67.c,29 :: 		
0x00EE	0xF000CFAE  	MOVFF       RCREG, R0
0x00F2	0xD7FB      	BRA         L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Init:
0x00F4	0x0012      	RETURN      0
; end of _UART1_Init
_rand:
;__Lib_CStdlib.c,307 :: 		
;__Lib_CStdlib.c,308 :: 		
0x00F6	0x521D      	MOVF        __Lib_CStdlib_randf, 1 
0x00F8	0xE105      	BNZ         L_rand75
;__Lib_CStdlib.c,309 :: 		
0x00FA	0x0E01      	MOVLW       1
0x00FC	0x6E30      	MOVWF       FARG_srand_x 
0x00FE	0x0E00      	MOVLW       0
0x0100	0x6E31      	MOVWF       FARG_srand_x+1 
0x0102	0xDFB5      	RCALL       _srand
L_rand75:
;__Lib_CStdlib.c,310 :: 		
0x0104	0xF000C019  	MOVFF       __Lib_CStdlib_randx, R0
0x0108	0xF001C01A  	MOVFF       __Lib_CStdlib_randx+1, R1
0x010C	0xF002C01B  	MOVFF       __Lib_CStdlib_randx+2, R2
0x0110	0xF003C01C  	MOVFF       __Lib_CStdlib_randx+3, R3
0x0114	0x0E6D      	MOVLW       109
0x0116	0x6E04      	MOVWF       R4 
0x0118	0x0E4E      	MOVLW       78
0x011A	0x6E05      	MOVWF       R5 
0x011C	0x0EC6      	MOVLW       198
0x011E	0x6E06      	MOVWF       R6 
0x0120	0x0E41      	MOVLW       65
0x0122	0x6E07      	MOVWF       R7 
0x0124	0xDF7B      	RCALL       _Mul_32x32_U
0x0126	0x0E39      	MOVLW       57
0x0128	0x2400      	ADDWF       R0, 0 
0x012A	0x6E05      	MOVWF       R5 
0x012C	0x0E30      	MOVLW       48
0x012E	0x2001      	ADDWFC      R1, 0 
0x0130	0x6E06      	MOVWF       R6 
0x0132	0x0E00      	MOVLW       0
0x0134	0x2002      	ADDWFC      R2, 0 
0x0136	0x6E07      	MOVWF       R7 
0x0138	0x0E00      	MOVLW       0
0x013A	0x2003      	ADDWFC      R3, 0 
0x013C	0x6E08      	MOVWF       R8 
0x013E	0xF000C007  	MOVFF       R7, R0
0x0142	0xF001C008  	MOVFF       R8, R1
0x0146	0x0E00      	MOVLW       0
0x0148	0xBE08      	BTFSC       R8, 7 
0x014A	0x0EFF      	MOVLW       255
0x014C	0x6E02      	MOVWF       R2 
0x014E	0x6E03      	MOVWF       R3 
0x0150	0x0EFF      	MOVLW       255
0x0152	0x1600      	ANDWF       R0, 1 
0x0154	0x0E7F      	MOVLW       127
0x0156	0x1601      	ANDWF       R1, 1 
0x0158	0x0E00      	MOVLW       0
0x015A	0x1602      	ANDWF       R2, 1 
0x015C	0x1603      	ANDWF       R3, 1 
0x015E	0xF019C000  	MOVFF       R0, __Lib_CStdlib_randx
0x0162	0xF01AC001  	MOVFF       R1, __Lib_CStdlib_randx+1
0x0166	0xF01BC002  	MOVFF       R2, __Lib_CStdlib_randx+2
0x016A	0xF01CC003  	MOVFF       R3, __Lib_CStdlib_randx+3
;__Lib_CStdlib.c,311 :: 		
;__Lib_CStdlib.c,312 :: 		
L_end_rand:
0x016E	0x0012      	RETURN      0
; end of _rand
_main:
;tx.c,1 :: 		void main() {
;tx.c,3 :: 		char x=0;
0x0170	0x6A2B      	CLRF        main_x_L0 
0x0172	0x6A2C      	CLRF        main_y_L0 
0x0174	0x6A2D      	CLRF        main_z_L0 
0x0176	0x6A2E      	CLRF        main_count_L0 
;tx.c,7 :: 		UART1_Init(9600);
0x0178	0x0E33      	MOVLW       51
0x017A	0x6EAF      	MOVWF       SPBRG 
0x017C	0x84AC      	BSF         TXSTA, 2, 0
0x017E	0xDF90      	RCALL       _UART1_Init
;tx.c,8 :: 		Delay_ms(100);
0x0180	0x0E02      	MOVLW       2
0x0182	0x6E0B      	MOVWF       R11, 0
0x0184	0x0E04      	MOVLW       4
0x0186	0x6E0C      	MOVWF       R12, 0
0x0188	0x0EBA      	MOVLW       186
0x018A	0x6E0D      	MOVWF       R13, 0
L_main0:
0x018C	0x2E0D      	DECFSZ      R13, 1, 0
0x018E	0xD7FE      	BRA         L_main0
0x0190	0x2E0C      	DECFSZ      R12, 1, 0
0x0192	0xD7FC      	BRA         L_main0
0x0194	0x2E0B      	DECFSZ      R11, 1, 0
0x0196	0xD7FA      	BRA         L_main0
0x0198	0x0000      	NOP
;tx.c,10 :: 		trisd=0;
0x019A	0x6A95      	CLRF        TRISD 
;tx.c,11 :: 		trisb=3;
0x019C	0x0E03      	MOVLW       3
0x019E	0x6E93      	MOVWF       TRISB 
;tx.c,13 :: 		loop1:
___main_loop1:
;tx.c,14 :: 		count =0;
0x01A0	0x6A2E      	CLRF        main_count_L0 
;tx.c,15 :: 		while(1)
L_main1:
;tx.c,18 :: 		n = rand();
0x01A2	0xDFA9      	RCALL       _rand
0x01A4	0xF02AC000  	MOVFF       R0, main_n_L0
;tx.c,19 :: 		UART1_Write(n);
0x01A8	0xF02FC000  	MOVFF       R0, FARG_UART1_Write_data_
0x01AC	0xDF6A      	RCALL       _UART1_Write
;tx.c,20 :: 		portd = n;
0x01AE	0xFF83C02A  	MOVFF       main_n_L0, PORTD
;tx.c,21 :: 		if(portb.b0==1)  // S1 = portb.b0
0x01B2	0xA081      	BTFSS       PORTB, 0 
0x01B4	0xD014      	BRA         L_main3
;tx.c,23 :: 		count = count +1;
0x01B6	0x2A2E      	INCF        main_count_L0, 1 
;tx.c,24 :: 		if(count == 1){
0x01B8	0x502E      	MOVF        main_count_L0, 0 
0x01BA	0x0A01      	XORLW       1
0x01BC	0xE102      	BNZ         L_main4
;tx.c,25 :: 		x = n;
0x01BE	0xF02BC02A  	MOVFF       main_n_L0, main_x_L0
;tx.c,28 :: 		}
L_main4:
;tx.c,29 :: 		if(count == 2){
0x01C2	0x502E      	MOVF        main_count_L0, 0 
0x01C4	0x0A02      	XORLW       2
0x01C6	0xE102      	BNZ         L_main5
;tx.c,30 :: 		y = n;
0x01C8	0xF02CC02A  	MOVFF       main_n_L0, main_y_L0
;tx.c,33 :: 		}
L_main5:
;tx.c,34 :: 		if(count == 3)
0x01CC	0x502E      	MOVF        main_count_L0, 0 
0x01CE	0x0A03      	XORLW       3
0x01D0	0xE103      	BNZ         L_main6
;tx.c,36 :: 		z = n;
0x01D2	0xF02DC02A  	MOVFF       main_n_L0, main_z_L0
;tx.c,39 :: 		goto loop2;
0x01D6	0xD004      	BRA         ___main_loop2
;tx.c,40 :: 		}
L_main6:
;tx.c,41 :: 		while(portb.b0==1){}   // S1 = portb.b0
L_main7:
0x01D8	0xA081      	BTFSS       PORTB, 0 
0x01DA	0xD001      	BRA         L_main8
0x01DC	0xD7FD      	BRA         L_main7
L_main8:
;tx.c,42 :: 		}
L_main3:
;tx.c,43 :: 		}
0x01DE	0xD7E1      	BRA         L_main1
;tx.c,45 :: 		loop2:
___main_loop2:
;tx.c,46 :: 		while(1)
L_main9:
;tx.c,48 :: 		UART1_Write(x);
0x01E0	0xF02FC02B  	MOVFF       main_x_L0, FARG_UART1_Write_data_
0x01E4	0xDF4E      	RCALL       _UART1_Write
;tx.c,49 :: 		portd = x;
0x01E6	0xFF83C02B  	MOVFF       main_x_L0, PORTD
;tx.c,50 :: 		delay_ms(500);
0x01EA	0x0E06      	MOVLW       6
0x01EC	0x6E0B      	MOVWF       R11, 0
0x01EE	0x0E13      	MOVLW       19
0x01F0	0x6E0C      	MOVWF       R12, 0
0x01F2	0x0EAD      	MOVLW       173
0x01F4	0x6E0D      	MOVWF       R13, 0
L_main11:
0x01F6	0x2E0D      	DECFSZ      R13, 1, 0
0x01F8	0xD7FE      	BRA         L_main11
0x01FA	0x2E0C      	DECFSZ      R12, 1, 0
0x01FC	0xD7FC      	BRA         L_main11
0x01FE	0x2E0B      	DECFSZ      R11, 1, 0
0x0200	0xD7FA      	BRA         L_main11
0x0202	0x0000      	NOP
0x0204	0x0000      	NOP
;tx.c,51 :: 		UART1_Write(y);
0x0206	0xF02FC02C  	MOVFF       main_y_L0, FARG_UART1_Write_data_
0x020A	0xDF3B      	RCALL       _UART1_Write
;tx.c,52 :: 		portd = y;
0x020C	0xFF83C02C  	MOVFF       main_y_L0, PORTD
;tx.c,53 :: 		delay_ms(500);
0x0210	0x0E06      	MOVLW       6
0x0212	0x6E0B      	MOVWF       R11, 0
0x0214	0x0E13      	MOVLW       19
0x0216	0x6E0C      	MOVWF       R12, 0
0x0218	0x0EAD      	MOVLW       173
0x021A	0x6E0D      	MOVWF       R13, 0
L_main12:
0x021C	0x2E0D      	DECFSZ      R13, 1, 0
0x021E	0xD7FE      	BRA         L_main12
0x0220	0x2E0C      	DECFSZ      R12, 1, 0
0x0222	0xD7FC      	BRA         L_main12
0x0224	0x2E0B      	DECFSZ      R11, 1, 0
0x0226	0xD7FA      	BRA         L_main12
0x0228	0x0000      	NOP
0x022A	0x0000      	NOP
;tx.c,54 :: 		UART1_Write(z);
0x022C	0xF02FC02D  	MOVFF       main_z_L0, FARG_UART1_Write_data_
0x0230	0xDF28      	RCALL       _UART1_Write
;tx.c,55 :: 		portd = z;
0x0232	0xFF83C02D  	MOVFF       main_z_L0, PORTD
;tx.c,56 :: 		delay_ms(500);
0x0236	0x0E06      	MOVLW       6
0x0238	0x6E0B      	MOVWF       R11, 0
0x023A	0x0E13      	MOVLW       19
0x023C	0x6E0C      	MOVWF       R12, 0
0x023E	0x0EAD      	MOVLW       173
0x0240	0x6E0D      	MOVWF       R13, 0
L_main13:
0x0242	0x2E0D      	DECFSZ      R13, 1, 0
0x0244	0xD7FE      	BRA         L_main13
0x0246	0x2E0C      	DECFSZ      R12, 1, 0
0x0248	0xD7FC      	BRA         L_main13
0x024A	0x2E0B      	DECFSZ      R11, 1, 0
0x024C	0xD7FA      	BRA         L_main13
0x024E	0x0000      	NOP
0x0250	0x0000      	NOP
;tx.c,57 :: 		if(portb.b1 == 1 ){goto loop1;}   // S1 = portb.b1
0x0252	0xA281      	BTFSS       PORTB, 1 
0x0254	0xD001      	BRA         L_main14
0x0256	0xD7A4      	BRA         ___main_loop1
L_main14:
;tx.c,58 :: 		}
0x0258	0xD7C3      	BRA         L_main9
;tx.c,59 :: 		}
L_end_main:
0x025A	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [82]    _Mul_32x32_U
0x006E      [20]    _srand
0x0082      [14]    _UART1_Write
0x0090      [16]    ___CC2DW
0x00A0      [86]    _UART1_Init
0x00F6     [122]    _rand
0x0170     [236]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0000       [1]    UART1_Init_tmp_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    R1
0x0001       [1]    __Lib_Conversions_Adjust_Hex_tmp_L0
0x0001       [1]    ispunct_rslt_L0
0x0002       [1]    R2
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    strlen_cp_L0
0x0002       [2]    memchr_s_L0
0x0002       [2]    memset_pp_L0
0x0003       [1]    R3
0x0003       [2]    memmove_tt_L0
0x0003       [2]    Ltrim_original_L0
0x0004       [1]    R4
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    strncpy_cp_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [2]    memmove_ff_L0
0x0005       [2]    Ltrim_p_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [4]    _UART_Wr_Ptr
0x0019       [4]    __Lib_CStdlib_randx
0x001D       [1]    __Lib_CStdlib_randf
0x001E       [4]    _UART_Tx_Idle_Ptr
0x0022       [4]    _UART_Rdy_Ptr
0x0026       [4]    _UART_Rd_Ptr
0x002A       [1]    main_n_L0
0x002B       [1]    main_x_L0
0x002C       [1]    main_y_L0
0x002D       [1]    main_z_L0
0x002E       [1]    main_count_L0
0x002F       [1]    FARG_UART1_Write_data_
0x0030       [2]    FARG_srand_x
0x0F81       [1]    PORTB
0x0F83       [1]    PORTD
0x0F93       [1]    TRISB
0x0F94       [0]    TRISC7_bit
0x0F94       [0]    TRISC6_bit
0x0F95       [1]    TRISD
0x0F9E       [1]    PIR1
0x0FAB       [1]    RCSTA
0x0FAC       [1]    TXSTA
0x0FAD       [1]    TXREG
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
